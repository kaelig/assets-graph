#!/usr/bin/env node

var debug = require('debug');
var log = debug('moniteur:log');
var program = require('commander');
var Promise = require('es6-promise').Promise;

var config = require('../lib/config');
var db = require('../lib/db');

program
  .version(require('../package.json').version);

program
  // TODO: Uncomment description when issue https://github.com/tj/commander.js/issues/285
  // is merged via https://github.com/tj/commander.js/pull/286
  .command('record'/*, 'record a snapshot of all asset metrics'*/)
  .action(function() {
    var Record = require('../').record;
    var record = new Record(
      config.assets.stylesheets,
      config,
      db
    );

    var recorders = record.init();
    var CSSDataPoints = record.recordCSSDataPoint();

    Promise.all(CSSDataPoints).then(function(dataPoints) {
      log(JSON.stringify(dataPoints, null, 4));
    });
  });

program
  .command('serve'/*, 'see assets sensor graphs in the browser'*/)
  .action(function() {
    var app = require('../app');

    app.set('port', process.env.PORT || 3000);

    var server = app.listen(app.get('port'), function() {
      debug('Express server listening on port ' + server.address().port);
    });
  });

program.parse(process.argv);
